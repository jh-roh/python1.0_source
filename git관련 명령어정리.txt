git log --oneline

=> git commit 된 로그들을 터미널에서 한줄로 표시해준다.
=> commit 해시값, 가리키는 정보, 커밋 메시지

git log -n 2
=> 최신으로 2개의 로그 내용만 확인하겠다.

git log --help
=> log 옵션에 대한 내용을 알려준다.

git log --oneline --decorate --graph
=> 그래프 형태로 로그 내용을 알고싶다.
=> 분기 및 머지된 형태의 내용을 알 수 있다.

git show
=> 가장 최신의 커밋 내용을 보여준다.

git show HEAD^^
git show HEAD~2
=> 현재로부터 2번쨰 전의 변경사항을 알 수 있다.

git reset --hard HEAD^^
=> 커밋의 변경사항들을 초기화한다.
=> 커밋을 삭제해버린다.
=> 커밋 HEAD 링크로 이동한다.

git reflog
=> 해당 main 브랜치에서 어떤 변경사항이 있었는지 History를 조회할수 있다.

git stash
=> 변경사항을 커밋하기 보단 임시저장
=> main 브랜치로부터 다른 브랜치로 전환해서 작업 중 변경사항을 커밋하기 애매한 상황에 사용

git stash list
=>git stash 임시저장한 목록을 확인가능하다.

git -stash -m '회원가입 폼 작업 진행중....'
=>stash 관련한 메시지를 남길 수 있다.

git stash pop
git stash pop 1
git stash pop 0
=> git stash list에 있는 stash 항목(임시저장 소스)를 꺼내 현재 분기에 다시 적용

git commit --amend
=> 기존 커밋의 메시지 내용을 수정하거나, 변경 후 덮어씌우고 싶을때 사용
=> git push origin main --force로 명령어 입력해야 push가 정상 동작
=> 운영환경에서는 조심해야하는 명령어


git rebase -i hash값
=> 해당 명령 실행 시 edit, pick, drop 등 해당 항목들 수정간ㅇ
=> 명령 실행 후 HEAD 시점의 커밋 항목의 내용 덮어쒸움(수정) 후 git commit --amend로 커밋
=> amend를 통해서 커밋 후 다음 과정으로 넘어가려면 git rebase --continue 옵션 적용


git merge branch명
git merge feature-c
=> 가장 일반적인 merge 명령어
